/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var dstore_values_pb = require('../../../dstore/values_pb.js');
var dstore_engine_error_pb = require('../../../dstore/engine/error_pb.js');
var dstore_engine_message_pb = require('../../../dstore/engine/message_pb.js');
var dstore_engine_metainformation_pb = require('../../../dstore/engine/metainformation_pb.js');
goog.exportSymbol('proto.dstore.engine.mi_CheckPerformance_Ad.Parameters', null, global);
goog.exportSymbol('proto.dstore.engine.mi_CheckPerformance_Ad.Response', null, global);
goog.exportSymbol('proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.mi_CheckPerformance_Ad.Parameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.displayName = 'proto.dstore.engine.mi_CheckPerformance_Ad.Parameters';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.mi_CheckPerformance_Ad.Parameters} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    procedureNames: (f = msg.getProcedureNames()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    procedureNamesNull: msg.getProcedureNamesNull(),
    onlyProceduresInAnyValues: (f = msg.getOnlyProceduresInAnyValues()) && dstore_values_pb.booleanValue.toObject(includeInstance, f),
    onlyProceduresInAnyValuesNull: msg.getOnlyProceduresInAnyValuesNull(),
    treeNodeId: (f = msg.getTreeNodeId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    treeNodeIdNull: msg.getTreeNodeIdNull(),
    treeNodeIdForVariantMatrix: (f = msg.getTreeNodeIdForVariantMatrix()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    treeNodeIdForVariantMatrixNull: msg.getTreeNodeIdForVariantMatrixNull(),
    yAxisCharacteristicId: (f = msg.getYAxisCharacteristicId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    yAxisCharacteristicIdNull: msg.getYAxisCharacteristicIdNull(),
    xAxisCharacteristicId: (f = msg.getXAxisCharacteristicId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    xAxisCharacteristicIdNull: msg.getXAxisCharacteristicIdNull(),
    valueCharacteristicId: (f = msg.getValueCharacteristicId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    valueCharacteristicIdNull: msg.getValueCharacteristicIdNull(),
    searchNodeCharacteristicIds: (f = msg.getSearchNodeCharacteristicIds()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    searchNodeCharacteristicIdsNull: msg.getSearchNodeCharacteristicIdsNull(),
    searchValue: (f = msg.getSearchValue()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    searchValueNull: msg.getSearchValueNull(),
    searchPersonTypeId: (f = msg.getSearchPersonTypeId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    searchPersonTypeIdNull: msg.getSearchPersonTypeIdNull(),
    personOutputCharacteristics: (f = msg.getPersonOutputCharacteristics()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    personOutputCharacteristicsNull: msg.getPersonOutputCharacteristicsNull(),
    personCharacteristicIds: (f = msg.getPersonCharacteristicIds()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    personCharacteristicIdsNull: msg.getPersonCharacteristicIdsNull(),
    conditionList: (f = msg.getConditionList()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    conditionListNull: msg.getConditionListNull(),
    orderPersonId: (f = msg.getOrderPersonId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    orderPersonIdNull: msg.getOrderPersonIdNull()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.mi_CheckPerformance_Ad.Parameters}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.mi_CheckPerformance_Ad.Parameters;
  return proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.mi_CheckPerformance_Ad.Parameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.mi_CheckPerformance_Ad.Parameters}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setProcedureNames(value);
      break;
    case 1001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProcedureNamesNull(value);
      break;
    case 2:
      var value = new dstore_values_pb.booleanValue;
      reader.readMessage(value,dstore_values_pb.booleanValue.deserializeBinaryFromReader);
      msg.setOnlyProceduresInAnyValues(value);
      break;
    case 1002:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyProceduresInAnyValuesNull(value);
      break;
    case 3:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setTreeNodeId(value);
      break;
    case 1003:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTreeNodeIdNull(value);
      break;
    case 4:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setTreeNodeIdForVariantMatrix(value);
      break;
    case 1004:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTreeNodeIdForVariantMatrixNull(value);
      break;
    case 5:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setYAxisCharacteristicId(value);
      break;
    case 1005:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setYAxisCharacteristicIdNull(value);
      break;
    case 6:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setXAxisCharacteristicId(value);
      break;
    case 1006:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setXAxisCharacteristicIdNull(value);
      break;
    case 7:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setValueCharacteristicId(value);
      break;
    case 1007:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueCharacteristicIdNull(value);
      break;
    case 8:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setSearchNodeCharacteristicIds(value);
      break;
    case 1008:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSearchNodeCharacteristicIdsNull(value);
      break;
    case 9:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setSearchValue(value);
      break;
    case 1009:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSearchValueNull(value);
      break;
    case 10:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setSearchPersonTypeId(value);
      break;
    case 1010:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSearchPersonTypeIdNull(value);
      break;
    case 11:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setPersonOutputCharacteristics(value);
      break;
    case 1011:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPersonOutputCharacteristicsNull(value);
      break;
    case 12:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setPersonCharacteristicIds(value);
      break;
    case 1012:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPersonCharacteristicIdsNull(value);
      break;
    case 13:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setConditionList(value);
      break;
    case 1013:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConditionListNull(value);
      break;
    case 14:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setOrderPersonId(value);
      break;
    case 1014:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOrderPersonIdNull(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.mi_CheckPerformance_Ad.Parameters} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getProcedureNames();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getProcedureNamesNull();
  if (f) {
    writer.writeBool(
      1001,
      f
    );
  }
  f = this.getOnlyProceduresInAnyValues();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      dstore_values_pb.booleanValue.serializeBinaryToWriter
    );
  }
  f = this.getOnlyProceduresInAnyValuesNull();
  if (f) {
    writer.writeBool(
      1002,
      f
    );
  }
  f = this.getTreeNodeId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getTreeNodeIdNull();
  if (f) {
    writer.writeBool(
      1003,
      f
    );
  }
  f = this.getTreeNodeIdForVariantMatrix();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getTreeNodeIdForVariantMatrixNull();
  if (f) {
    writer.writeBool(
      1004,
      f
    );
  }
  f = this.getYAxisCharacteristicId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getYAxisCharacteristicIdNull();
  if (f) {
    writer.writeBool(
      1005,
      f
    );
  }
  f = this.getXAxisCharacteristicId();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getXAxisCharacteristicIdNull();
  if (f) {
    writer.writeBool(
      1006,
      f
    );
  }
  f = this.getValueCharacteristicId();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getValueCharacteristicIdNull();
  if (f) {
    writer.writeBool(
      1007,
      f
    );
  }
  f = this.getSearchNodeCharacteristicIds();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getSearchNodeCharacteristicIdsNull();
  if (f) {
    writer.writeBool(
      1008,
      f
    );
  }
  f = this.getSearchValue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getSearchValueNull();
  if (f) {
    writer.writeBool(
      1009,
      f
    );
  }
  f = this.getSearchPersonTypeId();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getSearchPersonTypeIdNull();
  if (f) {
    writer.writeBool(
      1010,
      f
    );
  }
  f = this.getPersonOutputCharacteristics();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getPersonOutputCharacteristicsNull();
  if (f) {
    writer.writeBool(
      1011,
      f
    );
  }
  f = this.getPersonCharacteristicIds();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getPersonCharacteristicIdsNull();
  if (f) {
    writer.writeBool(
      1012,
      f
    );
  }
  f = this.getConditionList();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getConditionListNull();
  if (f) {
    writer.writeBool(
      1013,
      f
    );
  }
  f = this.getOrderPersonId();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getOrderPersonIdNull();
  if (f) {
    writer.writeBool(
      1014,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.mi_CheckPerformance_Ad.Parameters} The clone.
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.mi_CheckPerformance_Ad.Parameters} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional dstore.values.stringValue procedure_names = 1;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getProcedureNames = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 1));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setProcedureNames = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearProcedureNames = function() {
  this.setProcedureNames(undefined);
};


/**
 * optional bool procedure_names_null = 1001;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getProcedureNamesNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1001, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setProcedureNamesNull = function(value) {
  jspb.Message.setField(this, 1001, value);
};


/**
 * optional dstore.values.booleanValue only_procedures_in_any_values = 2;
 * @return {proto.dstore.values.booleanValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getOnlyProceduresInAnyValues = function() {
  return /** @type{proto.dstore.values.booleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.booleanValue, 2));
};


/** @param {proto.dstore.values.booleanValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setOnlyProceduresInAnyValues = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearOnlyProceduresInAnyValues = function() {
  this.setOnlyProceduresInAnyValues(undefined);
};


/**
 * optional bool only_procedures_in_any_values_null = 1002;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getOnlyProceduresInAnyValuesNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1002, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setOnlyProceduresInAnyValuesNull = function(value) {
  jspb.Message.setField(this, 1002, value);
};


/**
 * optional dstore.values.integerValue tree_node_id = 3;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getTreeNodeId = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 3));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setTreeNodeId = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearTreeNodeId = function() {
  this.setTreeNodeId(undefined);
};


/**
 * optional bool tree_node_id_null = 1003;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getTreeNodeIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1003, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setTreeNodeIdNull = function(value) {
  jspb.Message.setField(this, 1003, value);
};


/**
 * optional dstore.values.integerValue tree_node_id_for_variant_matrix = 4;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getTreeNodeIdForVariantMatrix = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 4));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setTreeNodeIdForVariantMatrix = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearTreeNodeIdForVariantMatrix = function() {
  this.setTreeNodeIdForVariantMatrix(undefined);
};


/**
 * optional bool tree_node_id_for_variant_matrix_null = 1004;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getTreeNodeIdForVariantMatrixNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1004, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setTreeNodeIdForVariantMatrixNull = function(value) {
  jspb.Message.setField(this, 1004, value);
};


/**
 * optional dstore.values.integerValue y_axis_characteristic_id = 5;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getYAxisCharacteristicId = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 5));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setYAxisCharacteristicId = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearYAxisCharacteristicId = function() {
  this.setYAxisCharacteristicId(undefined);
};


/**
 * optional bool y_axis_characteristic_id_null = 1005;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getYAxisCharacteristicIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1005, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setYAxisCharacteristicIdNull = function(value) {
  jspb.Message.setField(this, 1005, value);
};


/**
 * optional dstore.values.integerValue x_axis_characteristic_id = 6;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getXAxisCharacteristicId = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 6));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setXAxisCharacteristicId = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearXAxisCharacteristicId = function() {
  this.setXAxisCharacteristicId(undefined);
};


/**
 * optional bool x_axis_characteristic_id_null = 1006;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getXAxisCharacteristicIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1006, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setXAxisCharacteristicIdNull = function(value) {
  jspb.Message.setField(this, 1006, value);
};


/**
 * optional dstore.values.integerValue value_characteristic_id = 7;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getValueCharacteristicId = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 7));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setValueCharacteristicId = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearValueCharacteristicId = function() {
  this.setValueCharacteristicId(undefined);
};


/**
 * optional bool value_characteristic_id_null = 1007;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getValueCharacteristicIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1007, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setValueCharacteristicIdNull = function(value) {
  jspb.Message.setField(this, 1007, value);
};


/**
 * optional dstore.values.stringValue search_node_characteristic_ids = 8;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getSearchNodeCharacteristicIds = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 8));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setSearchNodeCharacteristicIds = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearSearchNodeCharacteristicIds = function() {
  this.setSearchNodeCharacteristicIds(undefined);
};


/**
 * optional bool search_node_characteristic_ids_null = 1008;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getSearchNodeCharacteristicIdsNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1008, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setSearchNodeCharacteristicIdsNull = function(value) {
  jspb.Message.setField(this, 1008, value);
};


/**
 * optional dstore.values.stringValue search_value = 9;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getSearchValue = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 9));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setSearchValue = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearSearchValue = function() {
  this.setSearchValue(undefined);
};


/**
 * optional bool search_value_null = 1009;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getSearchValueNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1009, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setSearchValueNull = function(value) {
  jspb.Message.setField(this, 1009, value);
};


/**
 * optional dstore.values.integerValue search_person_type_id = 10;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getSearchPersonTypeId = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 10));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setSearchPersonTypeId = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearSearchPersonTypeId = function() {
  this.setSearchPersonTypeId(undefined);
};


/**
 * optional bool search_person_type_id_null = 1010;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getSearchPersonTypeIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1010, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setSearchPersonTypeIdNull = function(value) {
  jspb.Message.setField(this, 1010, value);
};


/**
 * optional dstore.values.stringValue person_output_characteristics = 11;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getPersonOutputCharacteristics = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 11));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setPersonOutputCharacteristics = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearPersonOutputCharacteristics = function() {
  this.setPersonOutputCharacteristics(undefined);
};


/**
 * optional bool person_output_characteristics_null = 1011;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getPersonOutputCharacteristicsNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1011, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setPersonOutputCharacteristicsNull = function(value) {
  jspb.Message.setField(this, 1011, value);
};


/**
 * optional dstore.values.stringValue person_characteristic_ids = 12;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getPersonCharacteristicIds = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 12));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setPersonCharacteristicIds = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearPersonCharacteristicIds = function() {
  this.setPersonCharacteristicIds(undefined);
};


/**
 * optional bool person_characteristic_ids_null = 1012;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getPersonCharacteristicIdsNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1012, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setPersonCharacteristicIdsNull = function(value) {
  jspb.Message.setField(this, 1012, value);
};


/**
 * optional dstore.values.stringValue condition_list = 13;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getConditionList = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 13));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setConditionList = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearConditionList = function() {
  this.setConditionList(undefined);
};


/**
 * optional bool condition_list_null = 1013;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getConditionListNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1013, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setConditionListNull = function(value) {
  jspb.Message.setField(this, 1013, value);
};


/**
 * optional dstore.values.integerValue order_person_id = 14;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getOrderPersonId = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 14));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setOrderPersonId = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.clearOrderPersonId = function() {
  this.setOrderPersonId(undefined);
};


/**
 * optional bool order_person_id_null = 1014;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.getOrderPersonIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1014, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Parameters.prototype.setOrderPersonIdNull = function(value) {
  jspb.Message.setField(this, 1014, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dstore.engine.mi_CheckPerformance_Ad.Response.repeatedFields_, null);
};
goog.inherits(proto.dstore.engine.mi_CheckPerformance_Ad.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.mi_CheckPerformance_Ad.Response.displayName = 'proto.dstore.engine.mi_CheckPerformance_Ad.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.mi_CheckPerformance_Ad.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.mi_CheckPerformance_Ad.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && dstore_engine_error_pb.Error.toObject(includeInstance, f),
    metaInformationList: jspb.Message.toObjectList(msg.getMetaInformationList(),
    dstore_engine_metainformation_pb.MetaInformation.toObject, includeInstance),
    messageList: jspb.Message.toObjectList(msg.getMessageList(),
    dstore_engine_message_pb.Message.toObject, includeInstance),
    rowList: jspb.Message.toObjectList(msg.getRowList(),
    proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.mi_CheckPerformance_Ad.Response}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.mi_CheckPerformance_Ad.Response;
  return proto.dstore.engine.mi_CheckPerformance_Ad.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.mi_CheckPerformance_Ad.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.mi_CheckPerformance_Ad.Response}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dstore_engine_error_pb.Error;
      reader.readMessage(value,dstore_engine_error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new dstore_engine_metainformation_pb.MetaInformation;
      reader.readMessage(value,dstore_engine_metainformation_pb.MetaInformation.deserializeBinaryFromReader);
      msg.getMetaInformationList().push(value);
      msg.setMetaInformationList(msg.getMetaInformationList());
      break;
    case 3:
      var value = new dstore_engine_message_pb.Message;
      reader.readMessage(value,dstore_engine_message_pb.Message.deserializeBinaryFromReader);
      msg.getMessageList().push(value);
      msg.setMessageList(msg.getMessageList());
      break;
    case 4:
      var value = new proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row;
      reader.readMessage(value,proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.deserializeBinaryFromReader);
      msg.getRowList().push(value);
      msg.setRowList(msg.getRowList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.mi_CheckPerformance_Ad.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dstore_engine_error_pb.Error.serializeBinaryToWriter
    );
  }
  f = this.getMetaInformationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      dstore_engine_metainformation_pb.MetaInformation.serializeBinaryToWriter
    );
  }
  f = this.getMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      dstore_engine_message_pb.Message.serializeBinaryToWriter
    );
  }
  f = this.getRowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.mi_CheckPerformance_Ad.Response} The clone.
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.mi_CheckPerformance_Ad.Response} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional dstore.engine.error.Error error = 1;
 * @return {proto.dstore.engine.error.Error}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.getError = function() {
  return /** @type{proto.dstore.engine.error.Error} */ (
    jspb.Message.getWrapperField(this, dstore_engine_error_pb.Error, 1));
};


/** @param {proto.dstore.engine.error.Error|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * repeated dstore.engine.metainformation.MetaInformation meta_information = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.metainformation.MetaInformation>}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.getMetaInformationList = function() {
  return /** @type{!Array.<!proto.dstore.engine.metainformation.MetaInformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_metainformation_pb.MetaInformation, 2));
};


/** @param {Array.<!proto.dstore.engine.metainformation.MetaInformation>|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.setMetaInformationList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.clearMetaInformationList = function() {
  this.setMetaInformationList([]);
};


/**
 * repeated dstore.engine.message.Message message = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.message.Message>}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.getMessageList = function() {
  return /** @type{!Array.<!proto.dstore.engine.message.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_message_pb.Message, 3));
};


/** @param {Array.<!proto.dstore.engine.message.Message>|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.setMessageList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.clearMessageList = function() {
  this.setMessageList([]);
};


/**
 * repeated Row row = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row>}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.getRowList = function() {
  return /** @type{!Array.<!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row, 4));
};


/** @param {Array.<!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row>|undefined} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.setRowList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.dstore.engine.mi_CheckPerformance_Ad.Response.prototype.clearRowList = function() {
  this.setRowList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.displayName = 'proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowId: msg.getRowId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row;
  return proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10000:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRowId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRowId();
  if (f !== 0) {
    writer.writeInt32(
      10000,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row} The clone.
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 row_id = 10000;
 * @return {number}
 */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.prototype.getRowId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10000, 0));
};


/** @param {number} value  */
proto.dstore.engine.mi_CheckPerformance_Ad.Response.Row.prototype.setRowId = function(value) {
  jspb.Message.setField(this, 10000, value);
};


goog.object.extend(exports, proto.dstore.engine.mi_CheckPerformance_Ad);
