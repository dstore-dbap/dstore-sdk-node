/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var dstore_values_pb = require('../../../dstore/values_pb.js');
var dstore_engine_error_pb = require('../../../dstore/engine/error_pb.js');
var dstore_engine_message_pb = require('../../../dstore/engine/message_pb.js');
var dstore_engine_metainformation_pb = require('../../../dstore/engine/metainformation_pb.js');
goog.exportSymbol('proto.dstore.engine.mi_SearchBinaries_Ad.Parameters', null, global);
goog.exportSymbol('proto.dstore.engine.mi_SearchBinaries_Ad.Response', null, global);
goog.exportSymbol('proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.mi_SearchBinaries_Ad.Parameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.displayName = 'proto.dstore.engine.mi_SearchBinaries_Ad.Parameters';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.mi_SearchBinaries_Ad.Parameters} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputNestLevelConds: (f = msg.getInputNestLevelConds()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    inputNestLevelCondsNull: msg.getInputNestLevelCondsNull(),
    valueSeparatorINOperator: (f = msg.getValueSeparatorINOperator()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    valueSeparatorINOperatorNull: msg.getValueSeparatorINOperatorNull(),
    startAtRowNo: (f = msg.getStartAtRowNo()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    startAtRowNoNull: msg.getStartAtRowNoNull(),
    rowCount: (f = msg.getRowCount()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    rowCountNull: msg.getRowCountNull(),
    onlyUsedInTableBitmap: (f = msg.getOnlyUsedInTableBitmap()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    onlyUsedInTableBitmapNull: msg.getOnlyUsedInTableBitmapNull(),
    includeBinaryCode: (f = msg.getIncludeBinaryCode()) && dstore_values_pb.booleanValue.toObject(includeInstance, f),
    includeBinaryCodeNull: msg.getIncludeBinaryCodeNull(),
    outputBinaryCharacId1: (f = msg.getOutputBinaryCharacId1()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    outputBinaryCharacId1Null: msg.getOutputBinaryCharacId1Null(),
    outputBinaryCharacId2: (f = msg.getOutputBinaryCharacId2()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    outputBinaryCharacId2Null: msg.getOutputBinaryCharacId2Null(),
    outputBinaryCharacId3: (f = msg.getOutputBinaryCharacId3()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    outputBinaryCharacId3Null: msg.getOutputBinaryCharacId3Null()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.mi_SearchBinaries_Ad.Parameters}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.mi_SearchBinaries_Ad.Parameters;
  return proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.mi_SearchBinaries_Ad.Parameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.mi_SearchBinaries_Ad.Parameters}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setInputNestLevelConds(value);
      break;
    case 1001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInputNestLevelCondsNull(value);
      break;
    case 2:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setValueSeparatorINOperator(value);
      break;
    case 1002:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueSeparatorINOperatorNull(value);
      break;
    case 3:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setStartAtRowNo(value);
      break;
    case 1003:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStartAtRowNoNull(value);
      break;
    case 4:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setRowCount(value);
      break;
    case 1004:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRowCountNull(value);
      break;
    case 5:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setOnlyUsedInTableBitmap(value);
      break;
    case 1005:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyUsedInTableBitmapNull(value);
      break;
    case 6:
      var value = new dstore_values_pb.booleanValue;
      reader.readMessage(value,dstore_values_pb.booleanValue.deserializeBinaryFromReader);
      msg.setIncludeBinaryCode(value);
      break;
    case 1006:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeBinaryCodeNull(value);
      break;
    case 7:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setOutputBinaryCharacId1(value);
      break;
    case 1007:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOutputBinaryCharacId1Null(value);
      break;
    case 8:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setOutputBinaryCharacId2(value);
      break;
    case 1008:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOutputBinaryCharacId2Null(value);
      break;
    case 9:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setOutputBinaryCharacId3(value);
      break;
    case 1009:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOutputBinaryCharacId3Null(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.mi_SearchBinaries_Ad.Parameters} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInputNestLevelConds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getInputNestLevelCondsNull();
  if (f) {
    writer.writeBool(
      1001,
      f
    );
  }
  f = this.getValueSeparatorINOperator();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getValueSeparatorINOperatorNull();
  if (f) {
    writer.writeBool(
      1002,
      f
    );
  }
  f = this.getStartAtRowNo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getStartAtRowNoNull();
  if (f) {
    writer.writeBool(
      1003,
      f
    );
  }
  f = this.getRowCount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getRowCountNull();
  if (f) {
    writer.writeBool(
      1004,
      f
    );
  }
  f = this.getOnlyUsedInTableBitmap();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getOnlyUsedInTableBitmapNull();
  if (f) {
    writer.writeBool(
      1005,
      f
    );
  }
  f = this.getIncludeBinaryCode();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      dstore_values_pb.booleanValue.serializeBinaryToWriter
    );
  }
  f = this.getIncludeBinaryCodeNull();
  if (f) {
    writer.writeBool(
      1006,
      f
    );
  }
  f = this.getOutputBinaryCharacId1();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getOutputBinaryCharacId1Null();
  if (f) {
    writer.writeBool(
      1007,
      f
    );
  }
  f = this.getOutputBinaryCharacId2();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getOutputBinaryCharacId2Null();
  if (f) {
    writer.writeBool(
      1008,
      f
    );
  }
  f = this.getOutputBinaryCharacId3();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getOutputBinaryCharacId3Null();
  if (f) {
    writer.writeBool(
      1009,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.mi_SearchBinaries_Ad.Parameters} The clone.
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.mi_SearchBinaries_Ad.Parameters} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional dstore.values.integerValue input_nest_level_conds = 1;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getInputNestLevelConds = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 1));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setInputNestLevelConds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.clearInputNestLevelConds = function() {
  this.setInputNestLevelConds(undefined);
};


/**
 * optional bool input_nest_level_conds_null = 1001;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getInputNestLevelCondsNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1001, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setInputNestLevelCondsNull = function(value) {
  jspb.Message.setField(this, 1001, value);
};


/**
 * optional dstore.values.stringValue value_separator_i_n_operator = 2;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getValueSeparatorINOperator = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 2));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setValueSeparatorINOperator = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.clearValueSeparatorINOperator = function() {
  this.setValueSeparatorINOperator(undefined);
};


/**
 * optional bool value_separator_i_n_operator_null = 1002;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getValueSeparatorINOperatorNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1002, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setValueSeparatorINOperatorNull = function(value) {
  jspb.Message.setField(this, 1002, value);
};


/**
 * optional dstore.values.integerValue start_at_row_no = 3;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getStartAtRowNo = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 3));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setStartAtRowNo = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.clearStartAtRowNo = function() {
  this.setStartAtRowNo(undefined);
};


/**
 * optional bool start_at_row_no_null = 1003;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getStartAtRowNoNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1003, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setStartAtRowNoNull = function(value) {
  jspb.Message.setField(this, 1003, value);
};


/**
 * optional dstore.values.integerValue row_count = 4;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getRowCount = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 4));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setRowCount = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.clearRowCount = function() {
  this.setRowCount(undefined);
};


/**
 * optional bool row_count_null = 1004;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getRowCountNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1004, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setRowCountNull = function(value) {
  jspb.Message.setField(this, 1004, value);
};


/**
 * optional dstore.values.integerValue only_used_in_table_bitmap = 5;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getOnlyUsedInTableBitmap = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 5));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setOnlyUsedInTableBitmap = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.clearOnlyUsedInTableBitmap = function() {
  this.setOnlyUsedInTableBitmap(undefined);
};


/**
 * optional bool only_used_in_table_bitmap_null = 1005;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getOnlyUsedInTableBitmapNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1005, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setOnlyUsedInTableBitmapNull = function(value) {
  jspb.Message.setField(this, 1005, value);
};


/**
 * optional dstore.values.booleanValue include_binary_code = 6;
 * @return {proto.dstore.values.booleanValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getIncludeBinaryCode = function() {
  return /** @type{proto.dstore.values.booleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.booleanValue, 6));
};


/** @param {proto.dstore.values.booleanValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setIncludeBinaryCode = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.clearIncludeBinaryCode = function() {
  this.setIncludeBinaryCode(undefined);
};


/**
 * optional bool include_binary_code_null = 1006;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getIncludeBinaryCodeNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1006, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setIncludeBinaryCodeNull = function(value) {
  jspb.Message.setField(this, 1006, value);
};


/**
 * optional dstore.values.integerValue output_binary_charac_id1 = 7;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getOutputBinaryCharacId1 = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 7));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setOutputBinaryCharacId1 = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.clearOutputBinaryCharacId1 = function() {
  this.setOutputBinaryCharacId1(undefined);
};


/**
 * optional bool output_binary_charac_id1_null = 1007;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getOutputBinaryCharacId1Null = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1007, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setOutputBinaryCharacId1Null = function(value) {
  jspb.Message.setField(this, 1007, value);
};


/**
 * optional dstore.values.integerValue output_binary_charac_id2 = 8;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getOutputBinaryCharacId2 = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 8));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setOutputBinaryCharacId2 = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.clearOutputBinaryCharacId2 = function() {
  this.setOutputBinaryCharacId2(undefined);
};


/**
 * optional bool output_binary_charac_id2_null = 1008;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getOutputBinaryCharacId2Null = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1008, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setOutputBinaryCharacId2Null = function(value) {
  jspb.Message.setField(this, 1008, value);
};


/**
 * optional dstore.values.integerValue output_binary_charac_id3 = 9;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getOutputBinaryCharacId3 = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 9));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setOutputBinaryCharacId3 = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.clearOutputBinaryCharacId3 = function() {
  this.setOutputBinaryCharacId3(undefined);
};


/**
 * optional bool output_binary_charac_id3_null = 1009;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.getOutputBinaryCharacId3Null = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1009, false));
};


/** @param {boolean} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Parameters.prototype.setOutputBinaryCharacId3Null = function(value) {
  jspb.Message.setField(this, 1009, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dstore.engine.mi_SearchBinaries_Ad.Response.repeatedFields_, null);
};
goog.inherits(proto.dstore.engine.mi_SearchBinaries_Ad.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.mi_SearchBinaries_Ad.Response.displayName = 'proto.dstore.engine.mi_SearchBinaries_Ad.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.mi_SearchBinaries_Ad.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.mi_SearchBinaries_Ad.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && dstore_engine_error_pb.Error.toObject(includeInstance, f),
    metaInformationList: jspb.Message.toObjectList(msg.getMetaInformationList(),
    dstore_engine_metainformation_pb.MetaInformation.toObject, includeInstance),
    messageList: jspb.Message.toObjectList(msg.getMessageList(),
    dstore_engine_message_pb.Message.toObject, includeInstance),
    rowList: jspb.Message.toObjectList(msg.getRowList(),
    proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.toObject, includeInstance),
    numberOfElementsInResult: (f = msg.getNumberOfElementsInResult()) && dstore_values_pb.integerValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.mi_SearchBinaries_Ad.Response}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.mi_SearchBinaries_Ad.Response;
  return proto.dstore.engine.mi_SearchBinaries_Ad.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.mi_SearchBinaries_Ad.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.mi_SearchBinaries_Ad.Response}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dstore_engine_error_pb.Error;
      reader.readMessage(value,dstore_engine_error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new dstore_engine_metainformation_pb.MetaInformation;
      reader.readMessage(value,dstore_engine_metainformation_pb.MetaInformation.deserializeBinaryFromReader);
      msg.getMetaInformationList().push(value);
      msg.setMetaInformationList(msg.getMetaInformationList());
      break;
    case 3:
      var value = new dstore_engine_message_pb.Message;
      reader.readMessage(value,dstore_engine_message_pb.Message.deserializeBinaryFromReader);
      msg.getMessageList().push(value);
      msg.setMessageList(msg.getMessageList());
      break;
    case 4:
      var value = new proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row;
      reader.readMessage(value,proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.deserializeBinaryFromReader);
      msg.getRowList().push(value);
      msg.setRowList(msg.getRowList());
      break;
    case 101:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setNumberOfElementsInResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.mi_SearchBinaries_Ad.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dstore_engine_error_pb.Error.serializeBinaryToWriter
    );
  }
  f = this.getMetaInformationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      dstore_engine_metainformation_pb.MetaInformation.serializeBinaryToWriter
    );
  }
  f = this.getMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      dstore_engine_message_pb.Message.serializeBinaryToWriter
    );
  }
  f = this.getRowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.serializeBinaryToWriter
    );
  }
  f = this.getNumberOfElementsInResult();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.mi_SearchBinaries_Ad.Response} The clone.
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.mi_SearchBinaries_Ad.Response} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional dstore.engine.error.Error error = 1;
 * @return {proto.dstore.engine.error.Error}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.getError = function() {
  return /** @type{proto.dstore.engine.error.Error} */ (
    jspb.Message.getWrapperField(this, dstore_engine_error_pb.Error, 1));
};


/** @param {proto.dstore.engine.error.Error|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * repeated dstore.engine.metainformation.MetaInformation meta_information = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.metainformation.MetaInformation>}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.getMetaInformationList = function() {
  return /** @type{!Array.<!proto.dstore.engine.metainformation.MetaInformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_metainformation_pb.MetaInformation, 2));
};


/** @param {Array.<!proto.dstore.engine.metainformation.MetaInformation>|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.setMetaInformationList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.clearMetaInformationList = function() {
  this.setMetaInformationList([]);
};


/**
 * repeated dstore.engine.message.Message message = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.message.Message>}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.getMessageList = function() {
  return /** @type{!Array.<!proto.dstore.engine.message.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_message_pb.Message, 3));
};


/** @param {Array.<!proto.dstore.engine.message.Message>|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.setMessageList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.clearMessageList = function() {
  this.setMessageList([]);
};


/**
 * repeated Row row = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row>}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.getRowList = function() {
  return /** @type{!Array.<!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row, 4));
};


/** @param {Array.<!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row>|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.setRowList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.clearRowList = function() {
  this.setRowList([]);
};


/**
 * optional dstore.values.integerValue number_of_elements_in_result = 101;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.getNumberOfElementsInResult = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 101));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.setNumberOfElementsInResult = function(value) {
  jspb.Message.setWrapperField(this, 101, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.prototype.clearNumberOfElementsInResult = function() {
  this.setNumberOfElementsInResult(undefined);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.displayName = 'proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowId: msg.getRowId(),
    binaryCodeId: (f = msg.getBinaryCodeId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    binaryValue1: (f = msg.getBinaryValue1()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    binaryValue3: (f = msg.getBinaryValue3()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    thumbnailCode: (f = msg.getThumbnailCode()) && dstore_values_pb.bytesValue.toObject(includeInstance, f),
    binaryValue2: (f = msg.getBinaryValue2()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    usedInTableBitmap: (f = msg.getUsedInTableBitmap()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    binaryCode: (f = msg.getBinaryCode()) && dstore_values_pb.bytesValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row;
  return proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10000:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRowId(value);
      break;
    case 10001:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setBinaryCodeId(value);
      break;
    case 10002:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setBinaryValue1(value);
      break;
    case 10003:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setBinaryValue3(value);
      break;
    case 10004:
      var value = new dstore_values_pb.bytesValue;
      reader.readMessage(value,dstore_values_pb.bytesValue.deserializeBinaryFromReader);
      msg.setThumbnailCode(value);
      break;
    case 10005:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setBinaryValue2(value);
      break;
    case 10006:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setUsedInTableBitmap(value);
      break;
    case 10007:
      var value = new dstore_values_pb.bytesValue;
      reader.readMessage(value,dstore_values_pb.bytesValue.deserializeBinaryFromReader);
      msg.setBinaryCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRowId();
  if (f !== 0) {
    writer.writeInt32(
      10000,
      f
    );
  }
  f = this.getBinaryCodeId();
  if (f != null) {
    writer.writeMessage(
      10001,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getBinaryValue1();
  if (f != null) {
    writer.writeMessage(
      10002,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getBinaryValue3();
  if (f != null) {
    writer.writeMessage(
      10003,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getThumbnailCode();
  if (f != null) {
    writer.writeMessage(
      10004,
      f,
      dstore_values_pb.bytesValue.serializeBinaryToWriter
    );
  }
  f = this.getBinaryValue2();
  if (f != null) {
    writer.writeMessage(
      10005,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getUsedInTableBitmap();
  if (f != null) {
    writer.writeMessage(
      10006,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getBinaryCode();
  if (f != null) {
    writer.writeMessage(
      10007,
      f,
      dstore_values_pb.bytesValue.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row} The clone.
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 row_id = 10000;
 * @return {number}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.getRowId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10000, 0));
};


/** @param {number} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.setRowId = function(value) {
  jspb.Message.setField(this, 10000, value);
};


/**
 * optional dstore.values.integerValue binary_code_id = 10001;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.getBinaryCodeId = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 10001));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.setBinaryCodeId = function(value) {
  jspb.Message.setWrapperField(this, 10001, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.clearBinaryCodeId = function() {
  this.setBinaryCodeId(undefined);
};


/**
 * optional dstore.values.stringValue binary_value1 = 10002;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.getBinaryValue1 = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 10002));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.setBinaryValue1 = function(value) {
  jspb.Message.setWrapperField(this, 10002, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.clearBinaryValue1 = function() {
  this.setBinaryValue1(undefined);
};


/**
 * optional dstore.values.stringValue binary_value3 = 10003;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.getBinaryValue3 = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 10003));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.setBinaryValue3 = function(value) {
  jspb.Message.setWrapperField(this, 10003, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.clearBinaryValue3 = function() {
  this.setBinaryValue3(undefined);
};


/**
 * optional dstore.values.bytesValue thumbnail_code = 10004;
 * @return {proto.dstore.values.bytesValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.getThumbnailCode = function() {
  return /** @type{proto.dstore.values.bytesValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.bytesValue, 10004));
};


/** @param {proto.dstore.values.bytesValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.setThumbnailCode = function(value) {
  jspb.Message.setWrapperField(this, 10004, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.clearThumbnailCode = function() {
  this.setThumbnailCode(undefined);
};


/**
 * optional dstore.values.stringValue binary_value2 = 10005;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.getBinaryValue2 = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 10005));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.setBinaryValue2 = function(value) {
  jspb.Message.setWrapperField(this, 10005, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.clearBinaryValue2 = function() {
  this.setBinaryValue2(undefined);
};


/**
 * optional dstore.values.integerValue used_in_table_bitmap = 10006;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.getUsedInTableBitmap = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 10006));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.setUsedInTableBitmap = function(value) {
  jspb.Message.setWrapperField(this, 10006, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.clearUsedInTableBitmap = function() {
  this.setUsedInTableBitmap(undefined);
};


/**
 * optional dstore.values.bytesValue binary_code = 10007;
 * @return {proto.dstore.values.bytesValue}
 */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.getBinaryCode = function() {
  return /** @type{proto.dstore.values.bytesValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.bytesValue, 10007));
};


/** @param {proto.dstore.values.bytesValue|undefined} value  */
proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.setBinaryCode = function(value) {
  jspb.Message.setWrapperField(this, 10007, value);
};


proto.dstore.engine.mi_SearchBinaries_Ad.Response.Row.prototype.clearBinaryCode = function() {
  this.setBinaryCode(undefined);
};


goog.object.extend(exports, proto.dstore.engine.mi_SearchBinaries_Ad);
