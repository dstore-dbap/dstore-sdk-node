/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var dstore_values_pb = require('../../../dstore/values_pb.js');
var dstore_engine_message_pb = require('../../../dstore/engine/message_pb.js');
var dstore_engine_metainformation_pb = require('../../../dstore/engine/metainformation_pb.js');
goog.exportSymbol('proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters', null, global);
goog.exportSymbol('proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response', null, global);
goog.exportSymbol('proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.displayName = 'proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    incorrectInformationExist: (f = msg.getIncorrectInformationExist()) && dstore_values_pb.booleanValue.toObject(includeInstance, f),
    incorrectInformationExistNull: jspb.Message.getFieldWithDefault(msg, 1001, false),
    addOrderInformations: (f = msg.getAddOrderInformations()) && dstore_values_pb.booleanValue.toObject(includeInstance, f),
    addOrderInformationsNull: jspb.Message.getFieldWithDefault(msg, 1002, false),
    uniqueId: (f = msg.getUniqueId()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    uniqueIdNull: jspb.Message.getFieldWithDefault(msg, 1003, false),
    personId: (f = msg.getPersonId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    personIdNull: jspb.Message.getFieldWithDefault(msg, 1004, false),
    deliveryPersonId: (f = msg.getDeliveryPersonId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    deliveryPersonIdNull: jspb.Message.getFieldWithDefault(msg, 1005, false),
    shippingTypeId: (f = msg.getShippingTypeId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    shippingTypeIdNull: jspb.Message.getFieldWithDefault(msg, 1006, false),
    paymentTypeId: (f = msg.getPaymentTypeId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    paymentTypeIdNull: jspb.Message.getFieldWithDefault(msg, 1007, false),
    deliveryDateAndTime: (f = msg.getDeliveryDateAndTime()) && dstore_values_pb.timestampValue.toObject(includeInstance, f),
    deliveryDateAndTimeNull: jspb.Message.getFieldWithDefault(msg, 1008, false),
    startOrderId: (f = msg.getStartOrderId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    startOrderIdNull: jspb.Message.getFieldWithDefault(msg, 1009, false),
    priceNodeCharacteristicId: (f = msg.getPriceNodeCharacteristicId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    priceNodeCharacteristicIdNull: jspb.Message.getFieldWithDefault(msg, 1010, false),
    generatedOrderId: (f = msg.getGeneratedOrderId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    generatedOrderIdNull: jspb.Message.getFieldWithDefault(msg, 1011, false),
    addOrderInformation: (f = msg.getAddOrderInformation()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    addOrderInformationNull: jspb.Message.getFieldWithDefault(msg, 1012, false),
    addOrderContentInformation: (f = msg.getAddOrderContentInformation()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    addOrderContentInformationNull: jspb.Message.getFieldWithDefault(msg, 1013, false),
    getIncorrectInformation: (f = msg.getGetIncorrectInformation()) && dstore_values_pb.booleanValue.toObject(includeInstance, f),
    getIncorrectInformationNull: jspb.Message.getFieldWithDefault(msg, 1014, false),
    useCashAccountMaxValue: (f = msg.getUseCashAccountMaxValue()) && dstore_values_pb.decimalValue.toObject(includeInstance, f),
    useCashAccountMaxValueNull: jspb.Message.getFieldWithDefault(msg, 1015, false),
    abortIfItemsRemoved: (f = msg.getAbortIfItemsRemoved()) && dstore_values_pb.booleanValue.toObject(includeInstance, f),
    abortIfItemsRemovedNull: jspb.Message.getFieldWithDefault(msg, 1016, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters;
  return proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dstore_values_pb.booleanValue;
      reader.readMessage(value,dstore_values_pb.booleanValue.deserializeBinaryFromReader);
      msg.setIncorrectInformationExist(value);
      break;
    case 1001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncorrectInformationExistNull(value);
      break;
    case 2:
      var value = new dstore_values_pb.booleanValue;
      reader.readMessage(value,dstore_values_pb.booleanValue.deserializeBinaryFromReader);
      msg.setAddOrderInformations(value);
      break;
    case 1002:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAddOrderInformationsNull(value);
      break;
    case 3:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setUniqueId(value);
      break;
    case 1003:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUniqueIdNull(value);
      break;
    case 4:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setPersonId(value);
      break;
    case 1004:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPersonIdNull(value);
      break;
    case 5:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setDeliveryPersonId(value);
      break;
    case 1005:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeliveryPersonIdNull(value);
      break;
    case 6:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setShippingTypeId(value);
      break;
    case 1006:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShippingTypeIdNull(value);
      break;
    case 7:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setPaymentTypeId(value);
      break;
    case 1007:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentTypeIdNull(value);
      break;
    case 8:
      var value = new dstore_values_pb.timestampValue;
      reader.readMessage(value,dstore_values_pb.timestampValue.deserializeBinaryFromReader);
      msg.setDeliveryDateAndTime(value);
      break;
    case 1008:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeliveryDateAndTimeNull(value);
      break;
    case 9:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setStartOrderId(value);
      break;
    case 1009:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStartOrderIdNull(value);
      break;
    case 10:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setPriceNodeCharacteristicId(value);
      break;
    case 1010:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPriceNodeCharacteristicIdNull(value);
      break;
    case 11:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setGeneratedOrderId(value);
      break;
    case 1011:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGeneratedOrderIdNull(value);
      break;
    case 12:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setAddOrderInformation(value);
      break;
    case 1012:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAddOrderInformationNull(value);
      break;
    case 13:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setAddOrderContentInformation(value);
      break;
    case 1013:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAddOrderContentInformationNull(value);
      break;
    case 14:
      var value = new dstore_values_pb.booleanValue;
      reader.readMessage(value,dstore_values_pb.booleanValue.deserializeBinaryFromReader);
      msg.setGetIncorrectInformation(value);
      break;
    case 1014:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGetIncorrectInformationNull(value);
      break;
    case 15:
      var value = new dstore_values_pb.decimalValue;
      reader.readMessage(value,dstore_values_pb.decimalValue.deserializeBinaryFromReader);
      msg.setUseCashAccountMaxValue(value);
      break;
    case 1015:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseCashAccountMaxValueNull(value);
      break;
    case 16:
      var value = new dstore_values_pb.booleanValue;
      reader.readMessage(value,dstore_values_pb.booleanValue.deserializeBinaryFromReader);
      msg.setAbortIfItemsRemoved(value);
      break;
    case 1016:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAbortIfItemsRemovedNull(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIncorrectInformationExist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dstore_values_pb.booleanValue.serializeBinaryToWriter
    );
  }
  f = this.getIncorrectInformationExistNull();
  if (f) {
    writer.writeBool(
      1001,
      f
    );
  }
  f = this.getAddOrderInformations();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      dstore_values_pb.booleanValue.serializeBinaryToWriter
    );
  }
  f = this.getAddOrderInformationsNull();
  if (f) {
    writer.writeBool(
      1002,
      f
    );
  }
  f = this.getUniqueId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getUniqueIdNull();
  if (f) {
    writer.writeBool(
      1003,
      f
    );
  }
  f = this.getPersonId();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getPersonIdNull();
  if (f) {
    writer.writeBool(
      1004,
      f
    );
  }
  f = this.getDeliveryPersonId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getDeliveryPersonIdNull();
  if (f) {
    writer.writeBool(
      1005,
      f
    );
  }
  f = this.getShippingTypeId();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getShippingTypeIdNull();
  if (f) {
    writer.writeBool(
      1006,
      f
    );
  }
  f = this.getPaymentTypeId();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getPaymentTypeIdNull();
  if (f) {
    writer.writeBool(
      1007,
      f
    );
  }
  f = this.getDeliveryDateAndTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      dstore_values_pb.timestampValue.serializeBinaryToWriter
    );
  }
  f = this.getDeliveryDateAndTimeNull();
  if (f) {
    writer.writeBool(
      1008,
      f
    );
  }
  f = this.getStartOrderId();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getStartOrderIdNull();
  if (f) {
    writer.writeBool(
      1009,
      f
    );
  }
  f = this.getPriceNodeCharacteristicId();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getPriceNodeCharacteristicIdNull();
  if (f) {
    writer.writeBool(
      1010,
      f
    );
  }
  f = this.getGeneratedOrderId();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getGeneratedOrderIdNull();
  if (f) {
    writer.writeBool(
      1011,
      f
    );
  }
  f = this.getAddOrderInformation();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getAddOrderInformationNull();
  if (f) {
    writer.writeBool(
      1012,
      f
    );
  }
  f = this.getAddOrderContentInformation();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getAddOrderContentInformationNull();
  if (f) {
    writer.writeBool(
      1013,
      f
    );
  }
  f = this.getGetIncorrectInformation();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      dstore_values_pb.booleanValue.serializeBinaryToWriter
    );
  }
  f = this.getGetIncorrectInformationNull();
  if (f) {
    writer.writeBool(
      1014,
      f
    );
  }
  f = this.getUseCashAccountMaxValue();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      dstore_values_pb.decimalValue.serializeBinaryToWriter
    );
  }
  f = this.getUseCashAccountMaxValueNull();
  if (f) {
    writer.writeBool(
      1015,
      f
    );
  }
  f = this.getAbortIfItemsRemoved();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      dstore_values_pb.booleanValue.serializeBinaryToWriter
    );
  }
  f = this.getAbortIfItemsRemovedNull();
  if (f) {
    writer.writeBool(
      1016,
      f
    );
  }
};


/**
 * optional dstore.values.booleanValue incorrect_information_exist = 1;
 * @return {?proto.dstore.values.booleanValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getIncorrectInformationExist = function() {
  return /** @type{?proto.dstore.values.booleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.booleanValue, 1));
};


/** @param {?proto.dstore.values.booleanValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setIncorrectInformationExist = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearIncorrectInformationExist = function() {
  this.setIncorrectInformationExist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasIncorrectInformationExist = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool incorrect_information_exist_null = 1001;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getIncorrectInformationExistNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1001, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setIncorrectInformationExistNull = function(value) {
  jspb.Message.setField(this, 1001, value);
};


/**
 * optional dstore.values.booleanValue add_order_informations = 2;
 * @return {?proto.dstore.values.booleanValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getAddOrderInformations = function() {
  return /** @type{?proto.dstore.values.booleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.booleanValue, 2));
};


/** @param {?proto.dstore.values.booleanValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setAddOrderInformations = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearAddOrderInformations = function() {
  this.setAddOrderInformations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasAddOrderInformations = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool add_order_informations_null = 1002;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getAddOrderInformationsNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1002, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setAddOrderInformationsNull = function(value) {
  jspb.Message.setField(this, 1002, value);
};


/**
 * optional dstore.values.stringValue unique_id = 3;
 * @return {?proto.dstore.values.stringValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getUniqueId = function() {
  return /** @type{?proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 3));
};


/** @param {?proto.dstore.values.stringValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setUniqueId = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearUniqueId = function() {
  this.setUniqueId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasUniqueId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool unique_id_null = 1003;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getUniqueIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1003, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setUniqueIdNull = function(value) {
  jspb.Message.setField(this, 1003, value);
};


/**
 * optional dstore.values.integerValue person_id = 4;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getPersonId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 4));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setPersonId = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearPersonId = function() {
  this.setPersonId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasPersonId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool person_id_null = 1004;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getPersonIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1004, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setPersonIdNull = function(value) {
  jspb.Message.setField(this, 1004, value);
};


/**
 * optional dstore.values.integerValue delivery_person_id = 5;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getDeliveryPersonId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 5));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setDeliveryPersonId = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearDeliveryPersonId = function() {
  this.setDeliveryPersonId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasDeliveryPersonId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool delivery_person_id_null = 1005;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getDeliveryPersonIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1005, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setDeliveryPersonIdNull = function(value) {
  jspb.Message.setField(this, 1005, value);
};


/**
 * optional dstore.values.integerValue shipping_type_id = 6;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getShippingTypeId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 6));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setShippingTypeId = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearShippingTypeId = function() {
  this.setShippingTypeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasShippingTypeId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool shipping_type_id_null = 1006;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getShippingTypeIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1006, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setShippingTypeIdNull = function(value) {
  jspb.Message.setField(this, 1006, value);
};


/**
 * optional dstore.values.integerValue payment_type_id = 7;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getPaymentTypeId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 7));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setPaymentTypeId = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearPaymentTypeId = function() {
  this.setPaymentTypeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasPaymentTypeId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool payment_type_id_null = 1007;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getPaymentTypeIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1007, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setPaymentTypeIdNull = function(value) {
  jspb.Message.setField(this, 1007, value);
};


/**
 * optional dstore.values.timestampValue delivery_date_and_time = 8;
 * @return {?proto.dstore.values.timestampValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getDeliveryDateAndTime = function() {
  return /** @type{?proto.dstore.values.timestampValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.timestampValue, 8));
};


/** @param {?proto.dstore.values.timestampValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setDeliveryDateAndTime = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearDeliveryDateAndTime = function() {
  this.setDeliveryDateAndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasDeliveryDateAndTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool delivery_date_and_time_null = 1008;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getDeliveryDateAndTimeNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1008, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setDeliveryDateAndTimeNull = function(value) {
  jspb.Message.setField(this, 1008, value);
};


/**
 * optional dstore.values.integerValue start_order_id = 9;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getStartOrderId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 9));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setStartOrderId = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearStartOrderId = function() {
  this.setStartOrderId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasStartOrderId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool start_order_id_null = 1009;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getStartOrderIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1009, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setStartOrderIdNull = function(value) {
  jspb.Message.setField(this, 1009, value);
};


/**
 * optional dstore.values.integerValue price_node_characteristic_id = 10;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getPriceNodeCharacteristicId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 10));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setPriceNodeCharacteristicId = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearPriceNodeCharacteristicId = function() {
  this.setPriceNodeCharacteristicId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasPriceNodeCharacteristicId = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool price_node_characteristic_id_null = 1010;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getPriceNodeCharacteristicIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1010, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setPriceNodeCharacteristicIdNull = function(value) {
  jspb.Message.setField(this, 1010, value);
};


/**
 * optional dstore.values.integerValue generated_order_id = 11;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getGeneratedOrderId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 11));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setGeneratedOrderId = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearGeneratedOrderId = function() {
  this.setGeneratedOrderId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasGeneratedOrderId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool generated_order_id_null = 1011;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getGeneratedOrderIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1011, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setGeneratedOrderIdNull = function(value) {
  jspb.Message.setField(this, 1011, value);
};


/**
 * optional dstore.values.integerValue add_order_information = 12;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getAddOrderInformation = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 12));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setAddOrderInformation = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearAddOrderInformation = function() {
  this.setAddOrderInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasAddOrderInformation = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool add_order_information_null = 1012;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getAddOrderInformationNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1012, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setAddOrderInformationNull = function(value) {
  jspb.Message.setField(this, 1012, value);
};


/**
 * optional dstore.values.integerValue add_order_content_information = 13;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getAddOrderContentInformation = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 13));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setAddOrderContentInformation = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearAddOrderContentInformation = function() {
  this.setAddOrderContentInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasAddOrderContentInformation = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool add_order_content_information_null = 1013;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getAddOrderContentInformationNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1013, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setAddOrderContentInformationNull = function(value) {
  jspb.Message.setField(this, 1013, value);
};


/**
 * optional dstore.values.booleanValue get_incorrect_information = 14;
 * @return {?proto.dstore.values.booleanValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getGetIncorrectInformation = function() {
  return /** @type{?proto.dstore.values.booleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.booleanValue, 14));
};


/** @param {?proto.dstore.values.booleanValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setGetIncorrectInformation = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearGetIncorrectInformation = function() {
  this.setGetIncorrectInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasGetIncorrectInformation = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool get_incorrect_information_null = 1014;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getGetIncorrectInformationNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1014, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setGetIncorrectInformationNull = function(value) {
  jspb.Message.setField(this, 1014, value);
};


/**
 * optional dstore.values.decimalValue use_cash_account_max_value = 15;
 * @return {?proto.dstore.values.decimalValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getUseCashAccountMaxValue = function() {
  return /** @type{?proto.dstore.values.decimalValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.decimalValue, 15));
};


/** @param {?proto.dstore.values.decimalValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setUseCashAccountMaxValue = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearUseCashAccountMaxValue = function() {
  this.setUseCashAccountMaxValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasUseCashAccountMaxValue = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool use_cash_account_max_value_null = 1015;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getUseCashAccountMaxValueNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1015, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setUseCashAccountMaxValueNull = function(value) {
  jspb.Message.setField(this, 1015, value);
};


/**
 * optional dstore.values.booleanValue abort_if_items_removed = 16;
 * @return {?proto.dstore.values.booleanValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getAbortIfItemsRemoved = function() {
  return /** @type{?proto.dstore.values.booleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.booleanValue, 16));
};


/** @param {?proto.dstore.values.booleanValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setAbortIfItemsRemoved = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.clearAbortIfItemsRemoved = function() {
  this.setAbortIfItemsRemoved(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.hasAbortIfItemsRemoved = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool abort_if_items_removed_null = 1016;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.getAbortIfItemsRemovedNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1016, false));
};


/** @param {boolean} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters.prototype.setAbortIfItemsRemovedNull = function(value) {
  jspb.Message.setField(this, 1016, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.repeatedFields_, null);
};
goog.inherits(proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.displayName = 'proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    metaInformationList: jspb.Message.toObjectList(msg.getMetaInformationList(),
    dstore_engine_metainformation_pb.MetaInformation.toObject, includeInstance),
    messageList: jspb.Message.toObjectList(msg.getMessageList(),
    dstore_engine_message_pb.Message.toObject, includeInstance),
    rowList: jspb.Message.toObjectList(msg.getRowList(),
    proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.toObject, includeInstance),
    generatedOrderId: (f = msg.getGeneratedOrderId()) && dstore_values_pb.integerValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response;
  return proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new dstore_engine_metainformation_pb.MetaInformation;
      reader.readMessage(value,dstore_engine_metainformation_pb.MetaInformation.deserializeBinaryFromReader);
      msg.addMetaInformation(value);
      break;
    case 3:
      var value = new dstore_engine_message_pb.Message;
      reader.readMessage(value,dstore_engine_message_pb.Message.deserializeBinaryFromReader);
      msg.addMessage(value);
      break;
    case 4:
      var value = new proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row;
      reader.readMessage(value,proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.deserializeBinaryFromReader);
      msg.addRow(value);
      break;
    case 101:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setGeneratedOrderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getMetaInformationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      dstore_engine_metainformation_pb.MetaInformation.serializeBinaryToWriter
    );
  }
  f = this.getMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      dstore_engine_message_pb.Message.serializeBinaryToWriter
    );
  }
  f = this.getRowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.serializeBinaryToWriter
    );
  }
  f = this.getGeneratedOrderId();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated dstore.engine.metainformation.MetaInformation meta_information = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.metainformation.MetaInformation>}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.getMetaInformationList = function() {
  return /** @type{!Array.<!proto.dstore.engine.metainformation.MetaInformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_metainformation_pb.MetaInformation, 2));
};


/** @param {!Array.<!proto.dstore.engine.metainformation.MetaInformation>} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.setMetaInformationList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.dstore.engine.metainformation.MetaInformation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dstore.engine.metainformation.MetaInformation}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.addMetaInformation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dstore.engine.metainformation.MetaInformation, opt_index);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.clearMetaInformationList = function() {
  this.setMetaInformationList([]);
};


/**
 * repeated dstore.engine.message.Message message = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.message.Message>}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.getMessageList = function() {
  return /** @type{!Array.<!proto.dstore.engine.message.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_message_pb.Message, 3));
};


/** @param {!Array.<!proto.dstore.engine.message.Message>} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.setMessageList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.dstore.engine.message.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dstore.engine.message.Message}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.addMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.dstore.engine.message.Message, opt_index);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.clearMessageList = function() {
  this.setMessageList([]);
};


/**
 * repeated Row row = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row>}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.getRowList = function() {
  return /** @type{!Array.<!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row, 4));
};


/** @param {!Array.<!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row>} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.setRowList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.addRow = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row, opt_index);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.clearRowList = function() {
  this.setRowList([]);
};


/**
 * optional dstore.values.integerValue generated_order_id = 101;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.getGeneratedOrderId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 101));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.setGeneratedOrderId = function(value) {
  jspb.Message.setWrapperField(this, 101, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.clearGeneratedOrderId = function() {
  this.setGeneratedOrderId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.prototype.hasGeneratedOrderId = function() {
  return jspb.Message.getField(this, 101) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.displayName = 'proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowId: jspb.Message.getFieldWithDefault(msg, 10000, 0),
    informationTypeId: (f = msg.getInformationTypeId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    hTreeNodeId: (f = msg.getHTreeNodeId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    errorCode: (f = msg.getErrorCode()) && dstore_values_pb.integerValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row;
  return proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10000:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRowId(value);
      break;
    case 10001:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setInformationTypeId(value);
      break;
    case 10002:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setHTreeNodeId(value);
      break;
    case 10003:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setErrorCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRowId();
  if (f !== 0) {
    writer.writeInt32(
      10000,
      f
    );
  }
  f = this.getInformationTypeId();
  if (f != null) {
    writer.writeMessage(
      10001,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getHTreeNodeId();
  if (f != null) {
    writer.writeMessage(
      10002,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getErrorCode();
  if (f != null) {
    writer.writeMessage(
      10003,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 row_id = 10000;
 * @return {number}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.getRowId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10000, 0));
};


/** @param {number} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.setRowId = function(value) {
  jspb.Message.setField(this, 10000, value);
};


/**
 * optional dstore.values.integerValue information_type_id = 10001;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.getInformationTypeId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 10001));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.setInformationTypeId = function(value) {
  jspb.Message.setWrapperField(this, 10001, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.clearInformationTypeId = function() {
  this.setInformationTypeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.hasInformationTypeId = function() {
  return jspb.Message.getField(this, 10001) != null;
};


/**
 * optional dstore.values.integerValue h_tree_node_id = 10002;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.getHTreeNodeId = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 10002));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.setHTreeNodeId = function(value) {
  jspb.Message.setWrapperField(this, 10002, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.clearHTreeNodeId = function() {
  this.setHTreeNodeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.hasHTreeNodeId = function() {
  return jspb.Message.getField(this, 10002) != null;
};


/**
 * optional dstore.values.integerValue error_code = 10003;
 * @return {?proto.dstore.values.integerValue}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.getErrorCode = function() {
  return /** @type{?proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 10003));
};


/** @param {?proto.dstore.values.integerValue|undefined} value */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.setErrorCode = function(value) {
  jspb.Message.setWrapperField(this, 10003, value);
};


proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.clearErrorCode = function() {
  this.setErrorCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row.prototype.hasErrorCode = function() {
  return jspb.Message.getField(this, 10003) != null;
};


goog.object.extend(exports, proto.dstore.engine.om_CopyFromTrolleyToOrder_Pu);
