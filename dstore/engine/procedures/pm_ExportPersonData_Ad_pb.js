/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var dstore_values_pb = require('../../../dstore/values_pb.js');
var dstore_engine_error_pb = require('../../../dstore/engine/error_pb.js');
var dstore_engine_message_pb = require('../../../dstore/engine/message_pb.js');
var dstore_engine_metainformation_pb = require('../../../dstore/engine/metainformation_pb.js');
goog.exportSymbol('proto.dstore.engine.pm_ExportPersonData_Ad.Parameters', null, global);
goog.exportSymbol('proto.dstore.engine.pm_ExportPersonData_Ad.Response', null, global);
goog.exportSymbol('proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.pm_ExportPersonData_Ad.Parameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.displayName = 'proto.dstore.engine.pm_ExportPersonData_Ad.Parameters';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.pm_ExportPersonData_Ad.Parameters} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    personTypeId: (f = msg.getPersonTypeId()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    personTypeIdNull: msg.getPersonTypeIdNull(),
    characteristicIdList: (f = msg.getCharacteristicIdList()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    characteristicIdListNull: msg.getCharacteristicIdListNull(),
    separator: (f = msg.getSeparator()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    separatorNull: msg.getSeparatorNull(),
    charStringsInPropsToReplace: (f = msg.getCharStringsInPropsToReplace()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    charStringsInPropsToReplaceNull: msg.getCharStringsInPropsToReplaceNull(),
    replaceCharStringsInPropsBy: (f = msg.getReplaceCharStringsInPropsBy()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    replaceCharStringsInPropsByNull: msg.getReplaceCharStringsInPropsByNull(),
    rowCount: (f = msg.getRowCount()) && dstore_values_pb.integerValue.toObject(includeInstance, f),
    rowCountNull: msg.getRowCountNull(),
    includePersonId: (f = msg.getIncludePersonId()) && dstore_values_pb.booleanValue.toObject(includeInstance, f),
    includePersonIdNull: msg.getIncludePersonIdNull(),
    stringForNoProperty: (f = msg.getStringForNoProperty()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    stringForNoPropertyNull: msg.getStringForNoPropertyNull(),
    dateFormat: (f = msg.getDateFormat()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    dateFormatNull: msg.getDateFormatNull(),
    includeCreationDate: (f = msg.getIncludeCreationDate()) && dstore_values_pb.booleanValue.toObject(includeInstance, f),
    includeCreationDateNull: msg.getIncludeCreationDateNull(),
    includeLastEditedDate: (f = msg.getIncludeLastEditedDate()) && dstore_values_pb.booleanValue.toObject(includeInstance, f),
    includeLastEditedDateNull: msg.getIncludeLastEditedDateNull(),
    lastEditedInfoForCharacIds: (f = msg.getLastEditedInfoForCharacIds()) && dstore_values_pb.stringValue.toObject(includeInstance, f),
    lastEditedInfoForCharacIdsNull: msg.getLastEditedInfoForCharacIdsNull()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.pm_ExportPersonData_Ad.Parameters}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.pm_ExportPersonData_Ad.Parameters;
  return proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.pm_ExportPersonData_Ad.Parameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.pm_ExportPersonData_Ad.Parameters}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setPersonTypeId(value);
      break;
    case 1001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPersonTypeIdNull(value);
      break;
    case 2:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setCharacteristicIdList(value);
      break;
    case 1002:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCharacteristicIdListNull(value);
      break;
    case 3:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setSeparator(value);
      break;
    case 1003:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSeparatorNull(value);
      break;
    case 4:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setCharStringsInPropsToReplace(value);
      break;
    case 1004:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCharStringsInPropsToReplaceNull(value);
      break;
    case 5:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setReplaceCharStringsInPropsBy(value);
      break;
    case 1005:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReplaceCharStringsInPropsByNull(value);
      break;
    case 6:
      var value = new dstore_values_pb.integerValue;
      reader.readMessage(value,dstore_values_pb.integerValue.deserializeBinaryFromReader);
      msg.setRowCount(value);
      break;
    case 1006:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRowCountNull(value);
      break;
    case 7:
      var value = new dstore_values_pb.booleanValue;
      reader.readMessage(value,dstore_values_pb.booleanValue.deserializeBinaryFromReader);
      msg.setIncludePersonId(value);
      break;
    case 1007:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludePersonIdNull(value);
      break;
    case 8:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setStringForNoProperty(value);
      break;
    case 1008:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStringForNoPropertyNull(value);
      break;
    case 9:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setDateFormat(value);
      break;
    case 1009:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDateFormatNull(value);
      break;
    case 10:
      var value = new dstore_values_pb.booleanValue;
      reader.readMessage(value,dstore_values_pb.booleanValue.deserializeBinaryFromReader);
      msg.setIncludeCreationDate(value);
      break;
    case 1010:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeCreationDateNull(value);
      break;
    case 11:
      var value = new dstore_values_pb.booleanValue;
      reader.readMessage(value,dstore_values_pb.booleanValue.deserializeBinaryFromReader);
      msg.setIncludeLastEditedDate(value);
      break;
    case 1011:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeLastEditedDateNull(value);
      break;
    case 12:
      var value = new dstore_values_pb.stringValue;
      reader.readMessage(value,dstore_values_pb.stringValue.deserializeBinaryFromReader);
      msg.setLastEditedInfoForCharacIds(value);
      break;
    case 1012:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLastEditedInfoForCharacIdsNull(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.pm_ExportPersonData_Ad.Parameters} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPersonTypeId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getPersonTypeIdNull();
  if (f) {
    writer.writeBool(
      1001,
      f
    );
  }
  f = this.getCharacteristicIdList();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getCharacteristicIdListNull();
  if (f) {
    writer.writeBool(
      1002,
      f
    );
  }
  f = this.getSeparator();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getSeparatorNull();
  if (f) {
    writer.writeBool(
      1003,
      f
    );
  }
  f = this.getCharStringsInPropsToReplace();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getCharStringsInPropsToReplaceNull();
  if (f) {
    writer.writeBool(
      1004,
      f
    );
  }
  f = this.getReplaceCharStringsInPropsBy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getReplaceCharStringsInPropsByNull();
  if (f) {
    writer.writeBool(
      1005,
      f
    );
  }
  f = this.getRowCount();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      dstore_values_pb.integerValue.serializeBinaryToWriter
    );
  }
  f = this.getRowCountNull();
  if (f) {
    writer.writeBool(
      1006,
      f
    );
  }
  f = this.getIncludePersonId();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      dstore_values_pb.booleanValue.serializeBinaryToWriter
    );
  }
  f = this.getIncludePersonIdNull();
  if (f) {
    writer.writeBool(
      1007,
      f
    );
  }
  f = this.getStringForNoProperty();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getStringForNoPropertyNull();
  if (f) {
    writer.writeBool(
      1008,
      f
    );
  }
  f = this.getDateFormat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getDateFormatNull();
  if (f) {
    writer.writeBool(
      1009,
      f
    );
  }
  f = this.getIncludeCreationDate();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      dstore_values_pb.booleanValue.serializeBinaryToWriter
    );
  }
  f = this.getIncludeCreationDateNull();
  if (f) {
    writer.writeBool(
      1010,
      f
    );
  }
  f = this.getIncludeLastEditedDate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      dstore_values_pb.booleanValue.serializeBinaryToWriter
    );
  }
  f = this.getIncludeLastEditedDateNull();
  if (f) {
    writer.writeBool(
      1011,
      f
    );
  }
  f = this.getLastEditedInfoForCharacIds();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      dstore_values_pb.stringValue.serializeBinaryToWriter
    );
  }
  f = this.getLastEditedInfoForCharacIdsNull();
  if (f) {
    writer.writeBool(
      1012,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.pm_ExportPersonData_Ad.Parameters} The clone.
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.pm_ExportPersonData_Ad.Parameters} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional dstore.values.integerValue person_type_id = 1;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getPersonTypeId = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 1));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setPersonTypeId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearPersonTypeId = function() {
  this.setPersonTypeId(undefined);
};


/**
 * optional bool person_type_id_null = 1001;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getPersonTypeIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1001, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setPersonTypeIdNull = function(value) {
  jspb.Message.setField(this, 1001, value);
};


/**
 * optional dstore.values.stringValue characteristic_id_list = 2;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getCharacteristicIdList = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 2));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setCharacteristicIdList = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearCharacteristicIdList = function() {
  this.setCharacteristicIdList(undefined);
};


/**
 * optional bool characteristic_id_list_null = 1002;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getCharacteristicIdListNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1002, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setCharacteristicIdListNull = function(value) {
  jspb.Message.setField(this, 1002, value);
};


/**
 * optional dstore.values.stringValue separator = 3;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getSeparator = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 3));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setSeparator = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearSeparator = function() {
  this.setSeparator(undefined);
};


/**
 * optional bool separator_null = 1003;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getSeparatorNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1003, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setSeparatorNull = function(value) {
  jspb.Message.setField(this, 1003, value);
};


/**
 * optional dstore.values.stringValue char_strings_in_props_to_replace = 4;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getCharStringsInPropsToReplace = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 4));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setCharStringsInPropsToReplace = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearCharStringsInPropsToReplace = function() {
  this.setCharStringsInPropsToReplace(undefined);
};


/**
 * optional bool char_strings_in_props_to_replace_null = 1004;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getCharStringsInPropsToReplaceNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1004, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setCharStringsInPropsToReplaceNull = function(value) {
  jspb.Message.setField(this, 1004, value);
};


/**
 * optional dstore.values.stringValue replace_char_strings_in_props_by = 5;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getReplaceCharStringsInPropsBy = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 5));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setReplaceCharStringsInPropsBy = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearReplaceCharStringsInPropsBy = function() {
  this.setReplaceCharStringsInPropsBy(undefined);
};


/**
 * optional bool replace_char_strings_in_props_by_null = 1005;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getReplaceCharStringsInPropsByNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1005, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setReplaceCharStringsInPropsByNull = function(value) {
  jspb.Message.setField(this, 1005, value);
};


/**
 * optional dstore.values.integerValue row_count = 6;
 * @return {proto.dstore.values.integerValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getRowCount = function() {
  return /** @type{proto.dstore.values.integerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.integerValue, 6));
};


/** @param {proto.dstore.values.integerValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setRowCount = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearRowCount = function() {
  this.setRowCount(undefined);
};


/**
 * optional bool row_count_null = 1006;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getRowCountNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1006, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setRowCountNull = function(value) {
  jspb.Message.setField(this, 1006, value);
};


/**
 * optional dstore.values.booleanValue include_person_id = 7;
 * @return {proto.dstore.values.booleanValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getIncludePersonId = function() {
  return /** @type{proto.dstore.values.booleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.booleanValue, 7));
};


/** @param {proto.dstore.values.booleanValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setIncludePersonId = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearIncludePersonId = function() {
  this.setIncludePersonId(undefined);
};


/**
 * optional bool include_person_id_null = 1007;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getIncludePersonIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1007, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setIncludePersonIdNull = function(value) {
  jspb.Message.setField(this, 1007, value);
};


/**
 * optional dstore.values.stringValue string_for_no_property = 8;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getStringForNoProperty = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 8));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setStringForNoProperty = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearStringForNoProperty = function() {
  this.setStringForNoProperty(undefined);
};


/**
 * optional bool string_for_no_property_null = 1008;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getStringForNoPropertyNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1008, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setStringForNoPropertyNull = function(value) {
  jspb.Message.setField(this, 1008, value);
};


/**
 * optional dstore.values.stringValue date_format = 9;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getDateFormat = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 9));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setDateFormat = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearDateFormat = function() {
  this.setDateFormat(undefined);
};


/**
 * optional bool date_format_null = 1009;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getDateFormatNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1009, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setDateFormatNull = function(value) {
  jspb.Message.setField(this, 1009, value);
};


/**
 * optional dstore.values.booleanValue include_creation_date = 10;
 * @return {proto.dstore.values.booleanValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getIncludeCreationDate = function() {
  return /** @type{proto.dstore.values.booleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.booleanValue, 10));
};


/** @param {proto.dstore.values.booleanValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setIncludeCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearIncludeCreationDate = function() {
  this.setIncludeCreationDate(undefined);
};


/**
 * optional bool include_creation_date_null = 1010;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getIncludeCreationDateNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1010, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setIncludeCreationDateNull = function(value) {
  jspb.Message.setField(this, 1010, value);
};


/**
 * optional dstore.values.booleanValue include_last_edited_date = 11;
 * @return {proto.dstore.values.booleanValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getIncludeLastEditedDate = function() {
  return /** @type{proto.dstore.values.booleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.booleanValue, 11));
};


/** @param {proto.dstore.values.booleanValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setIncludeLastEditedDate = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearIncludeLastEditedDate = function() {
  this.setIncludeLastEditedDate(undefined);
};


/**
 * optional bool include_last_edited_date_null = 1011;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getIncludeLastEditedDateNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1011, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setIncludeLastEditedDateNull = function(value) {
  jspb.Message.setField(this, 1011, value);
};


/**
 * optional dstore.values.stringValue last_edited_info_for_charac_ids = 12;
 * @return {proto.dstore.values.stringValue}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getLastEditedInfoForCharacIds = function() {
  return /** @type{proto.dstore.values.stringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.stringValue, 12));
};


/** @param {proto.dstore.values.stringValue|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setLastEditedInfoForCharacIds = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.clearLastEditedInfoForCharacIds = function() {
  this.setLastEditedInfoForCharacIds(undefined);
};


/**
 * optional bool last_edited_info_for_charac_ids_null = 1012;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.getLastEditedInfoForCharacIdsNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1012, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Parameters.prototype.setLastEditedInfoForCharacIdsNull = function(value) {
  jspb.Message.setField(this, 1012, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dstore.engine.pm_ExportPersonData_Ad.Response.repeatedFields_, null);
};
goog.inherits(proto.dstore.engine.pm_ExportPersonData_Ad.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.pm_ExportPersonData_Ad.Response.displayName = 'proto.dstore.engine.pm_ExportPersonData_Ad.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.pm_ExportPersonData_Ad.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.pm_ExportPersonData_Ad.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && dstore_engine_error_pb.Error.toObject(includeInstance, f),
    metaInformationList: jspb.Message.toObjectList(msg.getMetaInformationList(),
    dstore_engine_metainformation_pb.MetaInformation.toObject, includeInstance),
    messageList: jspb.Message.toObjectList(msg.getMessageList(),
    dstore_engine_message_pb.Message.toObject, includeInstance),
    rowList: jspb.Message.toObjectList(msg.getRowList(),
    proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.pm_ExportPersonData_Ad.Response}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.pm_ExportPersonData_Ad.Response;
  return proto.dstore.engine.pm_ExportPersonData_Ad.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.pm_ExportPersonData_Ad.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.pm_ExportPersonData_Ad.Response}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dstore_engine_error_pb.Error;
      reader.readMessage(value,dstore_engine_error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new dstore_engine_metainformation_pb.MetaInformation;
      reader.readMessage(value,dstore_engine_metainformation_pb.MetaInformation.deserializeBinaryFromReader);
      msg.getMetaInformationList().push(value);
      msg.setMetaInformationList(msg.getMetaInformationList());
      break;
    case 3:
      var value = new dstore_engine_message_pb.Message;
      reader.readMessage(value,dstore_engine_message_pb.Message.deserializeBinaryFromReader);
      msg.getMessageList().push(value);
      msg.setMessageList(msg.getMessageList());
      break;
    case 4:
      var value = new proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row;
      reader.readMessage(value,proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.deserializeBinaryFromReader);
      msg.getRowList().push(value);
      msg.setRowList(msg.getRowList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.pm_ExportPersonData_Ad.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dstore_engine_error_pb.Error.serializeBinaryToWriter
    );
  }
  f = this.getMetaInformationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      dstore_engine_metainformation_pb.MetaInformation.serializeBinaryToWriter
    );
  }
  f = this.getMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      dstore_engine_message_pb.Message.serializeBinaryToWriter
    );
  }
  f = this.getRowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.pm_ExportPersonData_Ad.Response} The clone.
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.pm_ExportPersonData_Ad.Response} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional dstore.engine.error.Error error = 1;
 * @return {proto.dstore.engine.error.Error}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.getError = function() {
  return /** @type{proto.dstore.engine.error.Error} */ (
    jspb.Message.getWrapperField(this, dstore_engine_error_pb.Error, 1));
};


/** @param {proto.dstore.engine.error.Error|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * repeated dstore.engine.metainformation.MetaInformation meta_information = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.metainformation.MetaInformation>}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.getMetaInformationList = function() {
  return /** @type{!Array.<!proto.dstore.engine.metainformation.MetaInformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_metainformation_pb.MetaInformation, 2));
};


/** @param {Array.<!proto.dstore.engine.metainformation.MetaInformation>|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.setMetaInformationList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.clearMetaInformationList = function() {
  this.setMetaInformationList([]);
};


/**
 * repeated dstore.engine.message.Message message = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.message.Message>}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.getMessageList = function() {
  return /** @type{!Array.<!proto.dstore.engine.message.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_message_pb.Message, 3));
};


/** @param {Array.<!proto.dstore.engine.message.Message>|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.setMessageList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.clearMessageList = function() {
  this.setMessageList([]);
};


/**
 * repeated Row row = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row>}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.getRowList = function() {
  return /** @type{!Array.<!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row, 4));
};


/** @param {Array.<!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row>|undefined} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.setRowList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.dstore.engine.pm_ExportPersonData_Ad.Response.prototype.clearRowList = function() {
  this.setRowList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.displayName = 'proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowId: msg.getRowId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row;
  return proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10000:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRowId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRowId();
  if (f !== 0) {
    writer.writeInt32(
      10000,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row} The clone.
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 row_id = 10000;
 * @return {number}
 */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.prototype.getRowId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10000, 0));
};


/** @param {number} value  */
proto.dstore.engine.pm_ExportPersonData_Ad.Response.Row.prototype.setRowId = function(value) {
  jspb.Message.setField(this, 10000, value);
};


goog.object.extend(exports, proto.dstore.engine.pm_ExportPersonData_Ad);
