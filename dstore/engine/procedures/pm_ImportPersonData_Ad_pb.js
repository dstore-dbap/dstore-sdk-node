/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var dstore_values_pb = require('../../../dstore/values_pb.js');
var dstore_engine_engine_pb = require('../../../dstore/engine/engine_pb.js');
goog.exportSymbol('proto.dstore.engine.pm_ImportPersonData_Ad.Parameters', null, global);
goog.exportSymbol('proto.dstore.engine.pm_ImportPersonData_Ad.Response', null, global);
goog.exportSymbol('proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.pm_ImportPersonData_Ad.Parameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.displayName = 'proto.dstore.engine.pm_ImportPersonData_Ad.Parameters';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.pm_ImportPersonData_Ad.Parameters} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    personTypeId: (f = msg.getPersonTypeId()) && dstore_values_pb.IntegerValue.toObject(includeInstance, f),
    personTypeIdNull: msg.getPersonTypeIdNull(),
    howManyCharacteristics: (f = msg.getHowManyCharacteristics()) && dstore_values_pb.IntegerValue.toObject(includeInstance, f),
    howManyCharacteristicsNull: msg.getHowManyCharacteristicsNull(),
    dumpTransaction: (f = msg.getDumpTransaction()) && dstore_values_pb.BooleanValue.toObject(includeInstance, f),
    dumpTransactionNull: msg.getDumpTransactionNull(),
    country: (f = msg.getCountry()) && dstore_values_pb.StringValue.toObject(includeInstance, f),
    countryNull: msg.getCountryNull(),
    identifyingCharacteristicId: (f = msg.getIdentifyingCharacteristicId()) && dstore_values_pb.IntegerValue.toObject(includeInstance, f),
    identifyingCharacteristicIdNull: msg.getIdentifyingCharacteristicIdNull(),
    verifyChanges: (f = msg.getVerifyChanges()) && dstore_values_pb.BooleanValue.toObject(includeInstance, f),
    verifyChangesNull: msg.getVerifyChangesNull(),
    logErrors: (f = msg.getLogErrors()) && dstore_values_pb.BooleanValue.toObject(includeInstance, f),
    logErrorsNull: msg.getLogErrorsNull(),
    errorDateAndTimeNew: (f = msg.getErrorDateAndTimeNew()) && dstore_values_pb.TimestampValue.toObject(includeInstance, f),
    errorDateAndTimeNewNull: msg.getErrorDateAndTimeNewNull(),
    errorDateAndTimeModify: (f = msg.getErrorDateAndTimeModify()) && dstore_values_pb.TimestampValue.toObject(includeInstance, f),
    errorDateAndTimeModifyNull: msg.getErrorDateAndTimeModifyNull(),
    identValuesAreCaseSensitive: (f = msg.getIdentValuesAreCaseSensitive()) && dstore_values_pb.BooleanValue.toObject(includeInstance, f),
    identValuesAreCaseSensitiveNull: msg.getIdentValuesAreCaseSensitiveNull(),
    emptyStringToDeleteDetails: (f = msg.getEmptyStringToDeleteDetails()) && dstore_values_pb.BooleanValue.toObject(includeInstance, f),
    emptyStringToDeleteDetailsNull: msg.getEmptyStringToDeleteDetailsNull(),
    ignEmptStrInNOrMTabForNewPers: (f = msg.getIgnEmptStrInNOrMTabForNewPers()) && dstore_values_pb.BooleanValue.toObject(includeInstance, f),
    ignEmptStrInNOrMTabForNewPersNull: msg.getIgnEmptStrInNOrMTabForNewPersNull()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.pm_ImportPersonData_Ad.Parameters}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.pm_ImportPersonData_Ad.Parameters;
  return proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.pm_ImportPersonData_Ad.Parameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.pm_ImportPersonData_Ad.Parameters}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dstore_values_pb.IntegerValue;
      reader.readMessage(value,dstore_values_pb.IntegerValue.deserializeBinaryFromReader);
      msg.setPersonTypeId(value);
      break;
    case 1001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPersonTypeIdNull(value);
      break;
    case 2:
      var value = new dstore_values_pb.IntegerValue;
      reader.readMessage(value,dstore_values_pb.IntegerValue.deserializeBinaryFromReader);
      msg.setHowManyCharacteristics(value);
      break;
    case 1002:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHowManyCharacteristicsNull(value);
      break;
    case 3:
      var value = new dstore_values_pb.BooleanValue;
      reader.readMessage(value,dstore_values_pb.BooleanValue.deserializeBinaryFromReader);
      msg.setDumpTransaction(value);
      break;
    case 1003:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDumpTransactionNull(value);
      break;
    case 4:
      var value = new dstore_values_pb.StringValue;
      reader.readMessage(value,dstore_values_pb.StringValue.deserializeBinaryFromReader);
      msg.setCountry(value);
      break;
    case 1004:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCountryNull(value);
      break;
    case 5:
      var value = new dstore_values_pb.IntegerValue;
      reader.readMessage(value,dstore_values_pb.IntegerValue.deserializeBinaryFromReader);
      msg.setIdentifyingCharacteristicId(value);
      break;
    case 1005:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIdentifyingCharacteristicIdNull(value);
      break;
    case 6:
      var value = new dstore_values_pb.BooleanValue;
      reader.readMessage(value,dstore_values_pb.BooleanValue.deserializeBinaryFromReader);
      msg.setVerifyChanges(value);
      break;
    case 1006:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerifyChangesNull(value);
      break;
    case 7:
      var value = new dstore_values_pb.BooleanValue;
      reader.readMessage(value,dstore_values_pb.BooleanValue.deserializeBinaryFromReader);
      msg.setLogErrors(value);
      break;
    case 1007:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLogErrorsNull(value);
      break;
    case 8:
      var value = new dstore_values_pb.TimestampValue;
      reader.readMessage(value,dstore_values_pb.TimestampValue.deserializeBinaryFromReader);
      msg.setErrorDateAndTimeNew(value);
      break;
    case 1008:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setErrorDateAndTimeNewNull(value);
      break;
    case 9:
      var value = new dstore_values_pb.TimestampValue;
      reader.readMessage(value,dstore_values_pb.TimestampValue.deserializeBinaryFromReader);
      msg.setErrorDateAndTimeModify(value);
      break;
    case 1009:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setErrorDateAndTimeModifyNull(value);
      break;
    case 10:
      var value = new dstore_values_pb.BooleanValue;
      reader.readMessage(value,dstore_values_pb.BooleanValue.deserializeBinaryFromReader);
      msg.setIdentValuesAreCaseSensitive(value);
      break;
    case 1010:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIdentValuesAreCaseSensitiveNull(value);
      break;
    case 11:
      var value = new dstore_values_pb.BooleanValue;
      reader.readMessage(value,dstore_values_pb.BooleanValue.deserializeBinaryFromReader);
      msg.setEmptyStringToDeleteDetails(value);
      break;
    case 1011:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmptyStringToDeleteDetailsNull(value);
      break;
    case 12:
      var value = new dstore_values_pb.BooleanValue;
      reader.readMessage(value,dstore_values_pb.BooleanValue.deserializeBinaryFromReader);
      msg.setIgnEmptStrInNOrMTabForNewPers(value);
      break;
    case 1012:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnEmptStrInNOrMTabForNewPersNull(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.pm_ImportPersonData_Ad.Parameters} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPersonTypeId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dstore_values_pb.IntegerValue.serializeBinaryToWriter
    );
  }
  f = this.getPersonTypeIdNull();
  if (f) {
    writer.writeBool(
      1001,
      f
    );
  }
  f = this.getHowManyCharacteristics();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      dstore_values_pb.IntegerValue.serializeBinaryToWriter
    );
  }
  f = this.getHowManyCharacteristicsNull();
  if (f) {
    writer.writeBool(
      1002,
      f
    );
  }
  f = this.getDumpTransaction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      dstore_values_pb.BooleanValue.serializeBinaryToWriter
    );
  }
  f = this.getDumpTransactionNull();
  if (f) {
    writer.writeBool(
      1003,
      f
    );
  }
  f = this.getCountry();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      dstore_values_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = this.getCountryNull();
  if (f) {
    writer.writeBool(
      1004,
      f
    );
  }
  f = this.getIdentifyingCharacteristicId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      dstore_values_pb.IntegerValue.serializeBinaryToWriter
    );
  }
  f = this.getIdentifyingCharacteristicIdNull();
  if (f) {
    writer.writeBool(
      1005,
      f
    );
  }
  f = this.getVerifyChanges();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      dstore_values_pb.BooleanValue.serializeBinaryToWriter
    );
  }
  f = this.getVerifyChangesNull();
  if (f) {
    writer.writeBool(
      1006,
      f
    );
  }
  f = this.getLogErrors();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      dstore_values_pb.BooleanValue.serializeBinaryToWriter
    );
  }
  f = this.getLogErrorsNull();
  if (f) {
    writer.writeBool(
      1007,
      f
    );
  }
  f = this.getErrorDateAndTimeNew();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      dstore_values_pb.TimestampValue.serializeBinaryToWriter
    );
  }
  f = this.getErrorDateAndTimeNewNull();
  if (f) {
    writer.writeBool(
      1008,
      f
    );
  }
  f = this.getErrorDateAndTimeModify();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      dstore_values_pb.TimestampValue.serializeBinaryToWriter
    );
  }
  f = this.getErrorDateAndTimeModifyNull();
  if (f) {
    writer.writeBool(
      1009,
      f
    );
  }
  f = this.getIdentValuesAreCaseSensitive();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      dstore_values_pb.BooleanValue.serializeBinaryToWriter
    );
  }
  f = this.getIdentValuesAreCaseSensitiveNull();
  if (f) {
    writer.writeBool(
      1010,
      f
    );
  }
  f = this.getEmptyStringToDeleteDetails();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      dstore_values_pb.BooleanValue.serializeBinaryToWriter
    );
  }
  f = this.getEmptyStringToDeleteDetailsNull();
  if (f) {
    writer.writeBool(
      1011,
      f
    );
  }
  f = this.getIgnEmptStrInNOrMTabForNewPers();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      dstore_values_pb.BooleanValue.serializeBinaryToWriter
    );
  }
  f = this.getIgnEmptStrInNOrMTabForNewPersNull();
  if (f) {
    writer.writeBool(
      1012,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.pm_ImportPersonData_Ad.Parameters} The clone.
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.pm_ImportPersonData_Ad.Parameters} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional dstore.values.IntegerValue person_type_id = 1;
 * @return {proto.dstore.values.IntegerValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getPersonTypeId = function() {
  return /** @type{proto.dstore.values.IntegerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.IntegerValue, 1));
};


/** @param {proto.dstore.values.IntegerValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setPersonTypeId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearPersonTypeId = function() {
  this.setPersonTypeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasPersonTypeId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool person_type_id_null = 1001;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getPersonTypeIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1001, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setPersonTypeIdNull = function(value) {
  jspb.Message.setField(this, 1001, value);
};


/**
 * optional dstore.values.IntegerValue how_many_characteristics = 2;
 * @return {proto.dstore.values.IntegerValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getHowManyCharacteristics = function() {
  return /** @type{proto.dstore.values.IntegerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.IntegerValue, 2));
};


/** @param {proto.dstore.values.IntegerValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setHowManyCharacteristics = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearHowManyCharacteristics = function() {
  this.setHowManyCharacteristics(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasHowManyCharacteristics = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool how_many_characteristics_null = 1002;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getHowManyCharacteristicsNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1002, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setHowManyCharacteristicsNull = function(value) {
  jspb.Message.setField(this, 1002, value);
};


/**
 * optional dstore.values.BooleanValue dump_transaction = 3;
 * @return {proto.dstore.values.BooleanValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getDumpTransaction = function() {
  return /** @type{proto.dstore.values.BooleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.BooleanValue, 3));
};


/** @param {proto.dstore.values.BooleanValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setDumpTransaction = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearDumpTransaction = function() {
  this.setDumpTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasDumpTransaction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool dump_transaction_null = 1003;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getDumpTransactionNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1003, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setDumpTransactionNull = function(value) {
  jspb.Message.setField(this, 1003, value);
};


/**
 * optional dstore.values.StringValue country = 4;
 * @return {proto.dstore.values.StringValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getCountry = function() {
  return /** @type{proto.dstore.values.StringValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.StringValue, 4));
};


/** @param {proto.dstore.values.StringValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setCountry = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearCountry = function() {
  this.setCountry(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasCountry = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool country_null = 1004;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getCountryNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1004, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setCountryNull = function(value) {
  jspb.Message.setField(this, 1004, value);
};


/**
 * optional dstore.values.IntegerValue identifying_characteristic_id = 5;
 * @return {proto.dstore.values.IntegerValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getIdentifyingCharacteristicId = function() {
  return /** @type{proto.dstore.values.IntegerValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.IntegerValue, 5));
};


/** @param {proto.dstore.values.IntegerValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setIdentifyingCharacteristicId = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearIdentifyingCharacteristicId = function() {
  this.setIdentifyingCharacteristicId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasIdentifyingCharacteristicId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool identifying_characteristic_id_null = 1005;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getIdentifyingCharacteristicIdNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1005, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setIdentifyingCharacteristicIdNull = function(value) {
  jspb.Message.setField(this, 1005, value);
};


/**
 * optional dstore.values.BooleanValue verify_changes = 6;
 * @return {proto.dstore.values.BooleanValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getVerifyChanges = function() {
  return /** @type{proto.dstore.values.BooleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.BooleanValue, 6));
};


/** @param {proto.dstore.values.BooleanValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setVerifyChanges = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearVerifyChanges = function() {
  this.setVerifyChanges(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasVerifyChanges = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool verify_changes_null = 1006;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getVerifyChangesNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1006, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setVerifyChangesNull = function(value) {
  jspb.Message.setField(this, 1006, value);
};


/**
 * optional dstore.values.BooleanValue log_errors = 7;
 * @return {proto.dstore.values.BooleanValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getLogErrors = function() {
  return /** @type{proto.dstore.values.BooleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.BooleanValue, 7));
};


/** @param {proto.dstore.values.BooleanValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setLogErrors = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearLogErrors = function() {
  this.setLogErrors(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasLogErrors = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool log_errors_null = 1007;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getLogErrorsNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1007, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setLogErrorsNull = function(value) {
  jspb.Message.setField(this, 1007, value);
};


/**
 * optional dstore.values.TimestampValue error_date_and_time_new = 8;
 * @return {proto.dstore.values.TimestampValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getErrorDateAndTimeNew = function() {
  return /** @type{proto.dstore.values.TimestampValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.TimestampValue, 8));
};


/** @param {proto.dstore.values.TimestampValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setErrorDateAndTimeNew = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearErrorDateAndTimeNew = function() {
  this.setErrorDateAndTimeNew(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasErrorDateAndTimeNew = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool error_date_and_time_new_null = 1008;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getErrorDateAndTimeNewNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1008, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setErrorDateAndTimeNewNull = function(value) {
  jspb.Message.setField(this, 1008, value);
};


/**
 * optional dstore.values.TimestampValue error_date_and_time_modify = 9;
 * @return {proto.dstore.values.TimestampValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getErrorDateAndTimeModify = function() {
  return /** @type{proto.dstore.values.TimestampValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.TimestampValue, 9));
};


/** @param {proto.dstore.values.TimestampValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setErrorDateAndTimeModify = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearErrorDateAndTimeModify = function() {
  this.setErrorDateAndTimeModify(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasErrorDateAndTimeModify = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool error_date_and_time_modify_null = 1009;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getErrorDateAndTimeModifyNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1009, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setErrorDateAndTimeModifyNull = function(value) {
  jspb.Message.setField(this, 1009, value);
};


/**
 * optional dstore.values.BooleanValue ident_values_are_case_sensitive = 10;
 * @return {proto.dstore.values.BooleanValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getIdentValuesAreCaseSensitive = function() {
  return /** @type{proto.dstore.values.BooleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.BooleanValue, 10));
};


/** @param {proto.dstore.values.BooleanValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setIdentValuesAreCaseSensitive = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearIdentValuesAreCaseSensitive = function() {
  this.setIdentValuesAreCaseSensitive(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasIdentValuesAreCaseSensitive = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool ident_values_are_case_sensitive_null = 1010;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getIdentValuesAreCaseSensitiveNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1010, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setIdentValuesAreCaseSensitiveNull = function(value) {
  jspb.Message.setField(this, 1010, value);
};


/**
 * optional dstore.values.BooleanValue empty_string_to_delete_details = 11;
 * @return {proto.dstore.values.BooleanValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getEmptyStringToDeleteDetails = function() {
  return /** @type{proto.dstore.values.BooleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.BooleanValue, 11));
};


/** @param {proto.dstore.values.BooleanValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setEmptyStringToDeleteDetails = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearEmptyStringToDeleteDetails = function() {
  this.setEmptyStringToDeleteDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasEmptyStringToDeleteDetails = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool empty_string_to_delete_details_null = 1011;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getEmptyStringToDeleteDetailsNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1011, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setEmptyStringToDeleteDetailsNull = function(value) {
  jspb.Message.setField(this, 1011, value);
};


/**
 * optional dstore.values.BooleanValue ign_empt_str_in_n_or_m_tab_for_new_pers = 12;
 * @return {proto.dstore.values.BooleanValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getIgnEmptStrInNOrMTabForNewPers = function() {
  return /** @type{proto.dstore.values.BooleanValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.BooleanValue, 12));
};


/** @param {proto.dstore.values.BooleanValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setIgnEmptStrInNOrMTabForNewPers = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.clearIgnEmptStrInNOrMTabForNewPers = function() {
  this.setIgnEmptStrInNOrMTabForNewPers(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.hasIgnEmptStrInNOrMTabForNewPers = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool ign_empt_str_in_n_or_m_tab_for_new_pers_null = 1012;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.getIgnEmptStrInNOrMTabForNewPersNull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1012, false));
};


/** @param {boolean} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Parameters.prototype.setIgnEmptStrInNOrMTabForNewPersNull = function(value) {
  jspb.Message.setField(this, 1012, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dstore.engine.pm_ImportPersonData_Ad.Response.repeatedFields_, null);
};
goog.inherits(proto.dstore.engine.pm_ImportPersonData_Ad.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.pm_ImportPersonData_Ad.Response.displayName = 'proto.dstore.engine.pm_ImportPersonData_Ad.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.pm_ImportPersonData_Ad.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.pm_ImportPersonData_Ad.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    metaInformationList: jspb.Message.toObjectList(msg.getMetaInformationList(),
    dstore_engine_engine_pb.MetaInformation.toObject, includeInstance),
    messageList: jspb.Message.toObjectList(msg.getMessageList(),
    dstore_engine_engine_pb.Message.toObject, includeInstance),
    rowList: jspb.Message.toObjectList(msg.getRowList(),
    proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.toObject, includeInstance),
    errorDateAndTimeNew: (f = msg.getErrorDateAndTimeNew()) && dstore_values_pb.TimestampValue.toObject(includeInstance, f),
    errorDateAndTimeModify: (f = msg.getErrorDateAndTimeModify()) && dstore_values_pb.TimestampValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.pm_ImportPersonData_Ad.Response}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.pm_ImportPersonData_Ad.Response;
  return proto.dstore.engine.pm_ImportPersonData_Ad.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.pm_ImportPersonData_Ad.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.pm_ImportPersonData_Ad.Response}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new dstore_engine_engine_pb.MetaInformation;
      reader.readMessage(value,dstore_engine_engine_pb.MetaInformation.deserializeBinaryFromReader);
      msg.getMetaInformationList().push(value);
      msg.setMetaInformationList(msg.getMetaInformationList());
      break;
    case 3:
      var value = new dstore_engine_engine_pb.Message;
      reader.readMessage(value,dstore_engine_engine_pb.Message.deserializeBinaryFromReader);
      msg.getMessageList().push(value);
      msg.setMessageList(msg.getMessageList());
      break;
    case 4:
      var value = new proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row;
      reader.readMessage(value,proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.deserializeBinaryFromReader);
      msg.getRowList().push(value);
      msg.setRowList(msg.getRowList());
      break;
    case 101:
      var value = new dstore_values_pb.TimestampValue;
      reader.readMessage(value,dstore_values_pb.TimestampValue.deserializeBinaryFromReader);
      msg.setErrorDateAndTimeNew(value);
      break;
    case 102:
      var value = new dstore_values_pb.TimestampValue;
      reader.readMessage(value,dstore_values_pb.TimestampValue.deserializeBinaryFromReader);
      msg.setErrorDateAndTimeModify(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.pm_ImportPersonData_Ad.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getMetaInformationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      dstore_engine_engine_pb.MetaInformation.serializeBinaryToWriter
    );
  }
  f = this.getMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      dstore_engine_engine_pb.Message.serializeBinaryToWriter
    );
  }
  f = this.getRowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.serializeBinaryToWriter
    );
  }
  f = this.getErrorDateAndTimeNew();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      dstore_values_pb.TimestampValue.serializeBinaryToWriter
    );
  }
  f = this.getErrorDateAndTimeModify();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      dstore_values_pb.TimestampValue.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.pm_ImportPersonData_Ad.Response} The clone.
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.pm_ImportPersonData_Ad.Response} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated dstore.engine.MetaInformation meta_information = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.MetaInformation>}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.getMetaInformationList = function() {
  return /** @type{!Array.<!proto.dstore.engine.MetaInformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_engine_pb.MetaInformation, 2));
};


/** @param {Array.<!proto.dstore.engine.MetaInformation>} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.setMetaInformationList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.clearMetaInformationList = function() {
  this.setMetaInformationList([]);
};


/**
 * repeated dstore.engine.Message message = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.Message>}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.getMessageList = function() {
  return /** @type{!Array.<!proto.dstore.engine.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, dstore_engine_engine_pb.Message, 3));
};


/** @param {Array.<!proto.dstore.engine.Message>} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.setMessageList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.clearMessageList = function() {
  this.setMessageList([]);
};


/**
 * repeated Row row = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row>}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.getRowList = function() {
  return /** @type{!Array.<!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row, 4));
};


/** @param {Array.<!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row>} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.setRowList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.clearRowList = function() {
  this.setRowList([]);
};


/**
 * optional dstore.values.TimestampValue error_date_and_time_new = 101;
 * @return {proto.dstore.values.TimestampValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.getErrorDateAndTimeNew = function() {
  return /** @type{proto.dstore.values.TimestampValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.TimestampValue, 101));
};


/** @param {proto.dstore.values.TimestampValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.setErrorDateAndTimeNew = function(value) {
  jspb.Message.setWrapperField(this, 101, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.clearErrorDateAndTimeNew = function() {
  this.setErrorDateAndTimeNew(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.hasErrorDateAndTimeNew = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional dstore.values.TimestampValue error_date_and_time_modify = 102;
 * @return {proto.dstore.values.TimestampValue}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.getErrorDateAndTimeModify = function() {
  return /** @type{proto.dstore.values.TimestampValue} */ (
    jspb.Message.getWrapperField(this, dstore_values_pb.TimestampValue, 102));
};


/** @param {proto.dstore.values.TimestampValue|undefined} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.setErrorDateAndTimeModify = function(value) {
  jspb.Message.setWrapperField(this, 102, value);
};


proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.clearErrorDateAndTimeModify = function() {
  this.setErrorDateAndTimeModify(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.prototype.hasErrorDateAndTimeModify = function() {
  return jspb.Message.getField(this, 102) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.displayName = 'proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowId: msg.getRowId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row;
  return proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10000:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRowId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRowId();
  if (f !== 0) {
    writer.writeInt32(
      10000,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row} The clone.
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.prototype.cloneMessage = function() {
  return /** @type {!proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 row_id = 10000;
 * @return {number}
 */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.prototype.getRowId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10000, 0));
};


/** @param {number} value  */
proto.dstore.engine.pm_ImportPersonData_Ad.Response.Row.prototype.setRowId = function(value) {
  jspb.Message.setField(this, 10000, value);
};


goog.object.extend(exports, proto.dstore.engine.pm_ImportPersonData_Ad);
